{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/criterio/": {
            "get": {
                "tags": [
                    "criterio"
                ],
                "description": "get Criterio",
                "operationId": "CriterioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Criterio"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "criterio"
                ],
                "description": "create Criterio",
                "operationId": "CriterioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Criterio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Criterio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Criterio"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/criterio/{id}": {
            "get": {
                "tags": [
                    "criterio"
                ],
                "description": "get Criterio by id",
                "operationId": "CriterioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Criterio"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "criterio"
                ],
                "description": "update the Criterio",
                "operationId": "CriterioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Criterio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Criterio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Criterio"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "criterio"
                ],
                "description": "delete the Criterio",
                "operationId": "CriterioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/criterio_admision/": {
            "get": {
                "tags": [
                    "criterio_admision"
                ],
                "description": "get CriterioAdmision",
                "operationId": "CriterioAdmisionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CriterioAdmision"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "criterio_admision"
                ],
                "description": "create CriterioAdmision",
                "operationId": "CriterioAdmisionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CriterioAdmision content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CriterioAdmision"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CriterioAdmision"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/criterio_admision/{id}": {
            "get": {
                "tags": [
                    "criterio_admision"
                ],
                "description": "get CriterioAdmision by id",
                "operationId": "CriterioAdmisionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CriterioAdmision"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "criterio_admision"
                ],
                "description": "update the CriterioAdmision",
                "operationId": "CriterioAdmisionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CriterioAdmision content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CriterioAdmision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CriterioAdmision"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "criterio_admision"
                ],
                "description": "delete the CriterioAdmision",
                "operationId": "CriterioAdmisionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/criterio_programa_academico/": {
            "get": {
                "tags": [
                    "criterio_programa_academico"
                ],
                "description": "get CriterioProgramaAcademico",
                "operationId": "CriterioProgramaAcademicoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CriterioProgramaAcademico"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "criterio_programa_academico"
                ],
                "description": "create CriterioProgramaAcademico",
                "operationId": "CriterioProgramaAcademicoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CriterioProgramaAcademico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CriterioProgramaAcademico"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CriterioProgramaAcademico"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/criterio_programa_academico/{id}": {
            "get": {
                "tags": [
                    "criterio_programa_academico"
                ],
                "description": "get CriterioProgramaAcademico by id",
                "operationId": "CriterioProgramaAcademicoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CriterioProgramaAcademico"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "criterio_programa_academico"
                ],
                "description": "update the CriterioProgramaAcademico",
                "operationId": "CriterioProgramaAcademicoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CriterioProgramaAcademico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CriterioProgramaAcademico"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CriterioProgramaAcademico"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "criterio_programa_academico"
                ],
                "description": "delete the CriterioProgramaAcademico",
                "operationId": "CriterioProgramaAcademicoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/entrevista/": {
            "get": {
                "tags": [
                    "entrevista"
                ],
                "description": "get Entrevista",
                "operationId": "EntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "entrevista"
                ],
                "description": "create Entrevista",
                "operationId": "EntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Entrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/entrevista/{id}": {
            "get": {
                "tags": [
                    "entrevista"
                ],
                "description": "get Entrevista by id",
                "operationId": "EntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "entrevista"
                ],
                "description": "update the Entrevista",
                "operationId": "EntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "entrevista"
                ],
                "description": "delete the Entrevista",
                "operationId": "EntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/entrevistador/": {
            "get": {
                "tags": [
                    "entrevistador"
                ],
                "description": "get Entrevistador",
                "operationId": "EntrevistadorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "entrevistador"
                ],
                "description": "create Entrevistador",
                "operationId": "EntrevistadorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevistador content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Entrevistador"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/entrevistador/{id}": {
            "get": {
                "tags": [
                    "entrevistador"
                ],
                "description": "get Entrevistador by id",
                "operationId": "EntrevistadorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "entrevistador"
                ],
                "description": "update the Entrevistador",
                "operationId": "EntrevistadorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevistador content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "entrevistador"
                ],
                "description": "delete the Entrevistador",
                "operationId": "EntrevistadorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/entrevistador_entrevista/": {
            "get": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "get EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "create EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EntrevistadorEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EntrevistadorEntrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/entrevistador_entrevista/{id}": {
            "get": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "get EntrevistadorEntrevista by id",
                "operationId": "EntrevistadorEntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "update the EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EntrevistadorEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "delete the EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_entrevista/": {
            "get": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "get EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "create EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoEntrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_entrevista/{id}": {
            "get": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "get EstadoEntrevista by id",
                "operationId": "EstadoEntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "update the EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "delete the EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_entrevista/": {
            "get": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "get TipoEntrevista",
                "operationId": "TipoEntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "create TipoEntrevista",
                "operationId": "TipoEntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoEntrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_entrevista/{id}": {
            "get": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "get TipoEntrevista by id",
                "operationId": "TipoEntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "update the TipoEntrevista",
                "operationId": "TipoEntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "delete the TipoEntrevista",
                "operationId": "TipoEntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Criterio": {
            "title": "Criterio",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.CriterioAdmision": {
            "title": "CriterioAdmision",
            "type": "object",
            "properties": {
                "Admision": {
                    "type": "integer",
                    "format": "int64"
                },
                "CriterioProgramaAcademico": {
                    "$ref": "#/definitions/models.CriterioProgramaAcademico"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.CriterioProgramaAcademico": {
            "title": "CriterioProgramaAcademico",
            "type": "object",
            "properties": {
                "Criterio": {
                    "$ref": "#/definitions/models.Criterio"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PeriodoAcademico": {
                    "type": "integer",
                    "format": "int64"
                },
                "Porcentaje": {
                    "type": "number",
                    "format": "double"
                },
                "ProgramaAcademico": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Entrevista": {
            "title": "Entrevista",
            "type": "object",
            "properties": {
                "Admision": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoEntrevista": {
                    "$ref": "#/definitions/models.EstadoEntrevista"
                },
                "FechaEntrevista": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nota": {
                    "type": "number",
                    "format": "double"
                },
                "TipoEntrevista": {
                    "$ref": "#/definitions/models.TipoEntrevista"
                }
            }
        },
        "models.Entrevistador": {
            "title": "Entrevistador",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Ente": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProgramaAcademico": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EntrevistadorEntrevista": {
            "title": "EntrevistadorEntrevista",
            "type": "object",
            "properties": {
                "Entrevista": {
                    "$ref": "#/definitions/models.Entrevista"
                },
                "Entrevistador": {
                    "$ref": "#/definitions/models.Entrevistador"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EstadoEntrevista": {
            "title": "EstadoEntrevista",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoEntrevista": {
            "title": "TipoEntrevista",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "estado_entrevista",
            "description": "EstadoEntrevistaController operations for EstadoEntrevista\n"
        },
        {
            "name": "tipo_entrevista",
            "description": "TipoEntrevistaController operations for TipoEntrevista\n"
        },
        {
            "name": "criterio",
            "description": "CriterioController operations for Criterio\n"
        },
        {
            "name": "criterio_programa_academico",
            "description": "CriterioProgramaAcademicoController operations for CriterioProgramaAcademico\n"
        },
        {
            "name": "criterio_admision",
            "description": "CriterioAdmisionController operations for CriterioAdmision\n"
        },
        {
            "name": "entrevistador",
            "description": "EntrevistadorController operations for Entrevistador\n"
        },
        {
            "name": "entrevista",
            "description": "EntrevistaController operations for Entrevista\n"
        },
        {
            "name": "entrevistador_entrevista",
            "description": "EntrevistadorEntrevistaController operations for EntrevistadorEntrevista\n"
        }
    ]
}